#
# docker build . -f Dockerfile.testing --build-arg COMPOSER_HASH=dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6 --tag abenevaut/yaf-cms:test
# docker run -p 8080:8080 -v .:/var/task abenevaut/yaf-cms:test
#

FROM ghcr.io/abenevaut/vapor-nginx:php83

LABEL maintainer="Antoine Benevaut <me@abenevaut.dev>"
LABEL org.opencontainers.image.source=https://github.com/abenevaut/yaf-cms
LABEL org.opencontainers.image.path="Dockerfile"
LABEL org.opencontainers.image.title="yaf-cms"
LABEL org.opencontainers.image.description="This is an environment to develop yaf-cms."
LABEL org.opencontainers.image.authors="Antoine Benevaut <me@abenevaut.dev>"
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.documentation="https://github.com/abenevaut/yaf-cms/README.md"

RUN pecl channel-update pecl.php.net \
    && pecl install yaf xdebug \
    && rm -rf /tmp/pear

RUN docker-php-ext-enable yaf xdebug

ARG COMPOSER_HASH
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
    && php -r "if (hash_file('sha384', 'composer-setup.php') === '${COMPOSER_HASH}') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" \
    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \
    && php -r "unlink('composer-setup.php');"

COPY --chown=nobody rootfs/ /
RUN mv /usr/local/etc/php/conf.d/docker-php-ext-yaf.ini.testing /usr/local/etc/php/conf.d/docker-php-ext-yaf.ini

ENV nginx_client_max_body_size=2M \
    php_allow_url_fopen=On \
    php_allow_url_include=Off \
    # enable debug stack, important de le transformer en argument de demarrage dev/prod
    php_log_errors=On \
    php_display_errors=Off \
    php_error_reporting="E_ALL & ~E_DEPRECATED & ~E_STRICT" \
    php_file_uploads=On \
    php_max_execution_time=0 \
    php_max_input_time=-1 \
    php_max_input_vars=1000 \
    php_memory_limit=128M \
    php_post_max_size=8M \
    php_upload_max_filesize=2M \
    php_date_timezone=UTC \
    php_zlib_output_compression=On \
    ## XDebug PHP
    # https://xdebug.org/docs/all_settings#mode
    # values : develop,trace,debug,coverage
    php_xdebug_mode=coverage \
    php_xdebug_idekey=PHPSTORM \
    php_xdebug_log="/var/task/storage/logs/xdebug-errors.log" \
    ## OPCACHE PHP
    # enable debug stack, important de le transformer en argument de demarrage dev/prods
    php_opcache_enable=On \
    # https://www.php.net/manual/fr/opcache.configuration.php
    # default: tracing
    php_opcache_jit="function" \
    # default: 2
    php_opcache_revalidate_freq=Off \
    # default: 0
    php_opcache_enable_cli=On \
    ## PHP-FPM
    php_clear_env=No \
    ## to display error in docker console (stderr) use `/proc/self/fd/2`
    php_error_log="/var/task/storage/logs/error.log" \
    ## to display access in docker console (stderr) use `/proc/self/fd/2`
    php_access_log="/var/task/storage/logs/access.log"
